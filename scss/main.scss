@use "css-template/import" as template;
@use "controls/controls";
@use "colors";
@use "fonts";
@use "canvas";
@use "controls/edit-class-menu/edit-class-menu";

// Initialize the css template with the custom colors.
@include template.init($custom-colors: colors.$custom-colors);

// Load the fonts and set them as the default.
@include fonts.setup;

body {
  height: 100vh;
  height: 100svh;
  overflow: hidden;
  background-color: var(--color-paper-0);
}

#controls {
  @include controls.main;
}

#canvas-container {
  @include canvas.main;
}

#edit-class-dialog {
  @include edit-class-menu.dialog;
  #edit-class-menu {
    @include edit-class-menu.main;
  }
}

// Create css classes for common utils from the template.
.gone {
  @include template.gone;
}
.flex-grow {
  @include template.flex-grow;
}
.link {
  @include template.link;
}
.one-line {
  @include template.one-line;
}

// Screens that are 43rem or wider use the desktop layout.
@media screen and (min-width: 43rem) {
  body {
    display: grid;

    // The centering margins are unused until the page is 64rem wide.
    // [Centering margin] [Controls] [Gap] [Canvas] [Centering margin]
    grid-template-columns: 0 20rem 1rem 2fr 0;

    padding: 1rem;
  }
  #controls {
    @include controls.desktop;
    grid-column: 2;
    min-height: 0;
  }
  #canvas-container {
    grid-column: 4;
  }
}

// Screens that are 64rem or wider still use the desktop layout, but instead of
// growing wider it centers itself in the middle of the page.
@media screen and (min-width: 64rem) {
  body {
    // Lock the canvas at 41rem, now allow the centering margins to expand.
    // [Centering margin] [Controls] [Gap] [Canvas] [Centering margin]
    grid-template-columns: 1fr 20rem 1rem 41rem 1fr;
  }
}

// Screens that are less than 43rem wide use the mobile layout.
@media screen and (max-width: 42.999rem) {
  $collapsed-controls-height: 8.5rem;

  body {
    // The controls will be placed on top of the canvas when expanded, so they
    // will need to use absolute positioning.
    position: relative;
  }
  #controls {
    @include controls.mobile($collapsed-controls-height);

    // Use absolute positioning so the controls can be shown above the canvas
    // if needed. In desktop view the padding is 1rem, for mobile view we'll
    // slim it down to 0.5rem.
    position: absolute;
    left: 0.5rem;
    right: 0.5rem;
    top: 0.5rem;

    // Like doing "bottom: 0.5rem;" but it only does anything if the controls
    // get long enough that restricting their height is required. Means they
    // won't take up the full vertical space unless they need to.
    max-height: calc(100% - 1rem);

    // Show above the canvas container (it has "z-index: 0;").
    z-index: 1;
  }
  #canvas-container {
    // Use absolute positioning so the controls can be shown behind the canvas
    // if needed.
    position: absolute;
    left: 0.5rem;
    right: 0.5rem;
    top: $collapsed-controls-height + 1rem;
    bottom: 0.5rem;

    // Show behind the controls (they have "z-index: 1;").
    z-index: 0;
  }
  #edit-class-dialog {
    @include edit-class-menu.dialog-mobile;
  }
}
