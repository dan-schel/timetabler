@use "../../css-template/import" as template;
@use "picker-swatches";
@use "../../colors";

// The styles applied to the edit class menu.
@mixin main {
  flex-grow: 1;
  padding: 1rem;

  // The "Back" button.
  #edit-class-back-button {
    @include template.button-filled-neutral;
    @include template.content-text-icon;
    padding: 0rem 0.5rem;
    height: 1.5rem;
    gap: 0.25rem;
    align-self: flex-start;
    margin-bottom: 1rem;

    p {
      font-size: 0.75rem;
      font-weight: bold;
    }
  }

  // Only show .when-edit html when the .new class is NOT on the
  // #edit-class-menu.
  &.new {
    .when-edit {
      @include template.gone;
    }
  }

  // Only show .when-new html when the .new class is on the #edit-class-menu.
  &:not(.new) {
    .when-new {
      @include template.gone;
    }
  }

  // The "Edit/add class" title.
  h2 {
    font-size: 1rem;
    font-weight: bold;
    color: var(--color-ink-100);
  }

  // Only show error UI when the .error class is on the #edit-class-menu.
  &:not(.error) {
    .when-error {
      @include template.gone;
    }
  }

  #edit-class-error-ui {
    @include template.row;
    margin-top: 0.5rem;
    border: 2px solid var(--color-error);
    border-radius: 0.5rem;
    padding: 0.5rem 0.5rem;
    gap: 0.5rem;

    .icon {
      color: var(--color-error);
      font-size: 1.2rem;
    }
    p {
      flex-shrink: 1;
    }
  }

  p.label {
    @include template.no-select;
    margin-top: 1rem;
    margin-bottom: 0.25rem;
  }

  label.text-input {
    // Prevents the whitespace above the label being considered part of the
    // textbox's hitbox.
    margin-top: 1rem;
    cursor: text;
    .label {
      margin-top: 0rem;
      margin-bottom: 0.25rem;
    }

    input[type="text"] {
      @include template.input-filled-neutral;
      height: 2rem;
      padding: 0rem 1rem;
    }
  }

  #edit-class-color-picker {
    @include picker-swatches.swatches($content-class: "picker-content");
    @include colors.gradient-classes($direction: "to bottom right");

    // The swatch only fill 80% of their diameter on a good day, to move them
    // over a smidge to line up with the edge better.
    margin-left: -0.2rem;
    margin-right: -0.2rem;
    margin-bottom: -0.2rem;

    .picker-content {
      width: 2rem;
      height: 2rem;
      --background: var(--gradient);
    }
  }

  .switch {
    @include template.checkbox-switch(
      $graphic-class: "switch-graphic",
      $content-class: "switch-content"
    );

    .switch-content {
      @include template.content-text;
      margin-left: 1rem;
    }
  }
  #edit-class-optional-switch-label {
    margin-bottom: 1rem;
  }

  #edit-class-add-option-button {
    @include template.button-filled-neutral;
    @include template.content-text-icon;
    padding: 0rem 0.5rem;
    height: 1.5rem;
    gap: 0.25rem;
    align-self: flex-start;
    margin-bottom: 1rem;

    p {
      font-size: 0.75rem;
      font-weight: bold;
    }
  }

  #edit-class-options {
    flex-grow: 1;
    margin-bottom: 1rem;
    gap: 0.5rem;

    .option {
      display: grid;
      grid-template-rows: auto auto;

      border: 2px solid var(--color-ink-30);
      border-radius: 0.5rem;
      overflow: hidden;

      .blocks {
        padding: 0.5rem;
        gap: 0.5rem;
      }

      .add-block-button {
        @include template.button-filled-neutral;
        @include template.content-text-icon;
        --button-rounding: 0;
        padding: 0rem 0.5rem;
        height: 1.5rem;
      }

      .block-editor {
        padding: 0.5rem;
        gap: 0.5rem;
        background-color: var(--color-paper-30);
        min-width: 0;

        > div {
          @include template.row;
          gap: 0.5rem;
        }

        .select-wrapper {
          @include template.select-filled-neutral(
            $highlight-class: "select-highlight",
            $arrow-class: "select-arrow"
          );
          width: 6rem;
          flex-shrink: 2;
          min-width: 0;
          select {
            height: 2rem;
            padding: 0 1.75rem 0 1rem;
            width: 100%;
          }
        }
        input[type="text"] {
          @include template.input-filled-neutral;
          height: 2rem;
          width: 6rem;
          padding: 0 1rem;
          flex-shrink: 2;
          min-width: 0;
        }
        .duration-ui {
          @include template.row;
          gap: 0.5rem;
          flex-shrink: 1;
          min-width: 0;

          input[type="text"] {
            width: 4rem;
            min-width: 0;
          }
          .unit-picker {
            @include template.picker-subtle($content-class: "picker-content");
            @include template.row;
            .picker-content {
              @include template.content-text;
            }
            > p {
              color: var(--color-ink-50);
            }
          }
        }
        .switch-content {
          margin-left: 0.5rem;
        }
        .cancel-button {
          @include template.button-filled-neutral;
        }
        .submit-button {
          @include template.button-filled;
        }
        .cancel-button,
        .submit-button {
          @include template.content-text-icon;
          height: 2rem;
          width: 3rem;
          .icon {
            font-size: 1.2rem;
          }
        }
      }

      &.editing {
        .add-block-button {
          @include template.gone;
        }
      }
      &:not(.editing) {
        .block-editor {
          @include template.gone;
        }
      }
    }
  }

  #edit-class-submit-button {
    @include template.button-filled;
    @include template.content-text-icon;
    height: 2.5rem;
    gap: 0.5rem;
    .icon {
      font-size: 1.2rem;
    }
  }
}

// The styles applied to the dialog element that the menu sits inside.
@mixin dialog {
  @include template.dialog;
  border-radius: 0.75rem;

  transition: opacity 0.2s, visibility 0.2s, transform 0.2s;
  opacity: 1;
  visibility: visible;
  display: block;

  width: min(calc(100% - 2rem), 50rem);
  min-width: calc(var(--min-page-width) - 1rem);
  max-height: calc(100% - 2rem);
  z-index: 2;

  &:not([open]) {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    transform: translate(-50%, calc(1rem - 50%));
    min-width: 0;
  }
}
@mixin dialog-mobile {
  width: min(calc(100% - 1rem), 60rem);
  max-height: calc(100% - 1rem);
}
